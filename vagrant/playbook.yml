---
- hosts: default
  become: yes
  become_user: root
  vars:
    timezone: "Europe/Vienna"
    virtualenv_path: ~vagrant/env
    workdir: ~vagrant/hostdir
    db_name: "supermarket"
    db_user: "vagrant"
    db_password: "vagrant"
  tasks:

# -------- update --------------------------------------------
  - name: update apt cache
    apt: update_cache=yes

# -------- environment ---------------------------------------
  - name: ensure OS environment
    apt: name={{ item }} state=present install_recommends=no
    with_items:
      - build-essential
      - postgresql
      - libpq-dev
      - python
      - python-setuptools
      - python-psycopg2
      - python-pip
      - python3
      - python3-setuptools
      - python3-venv
      - python3-pip
      - python3-dev
      - postgresql
  - name: update pip
    pip: name=pip virtualenv={{ virtualenv_path }} virtualenv_command=pyvenv-3.4
    become: true
    become_user: vagrant
  - name: install app requirements
    pip: requirements={{ workdir }}/requirements/dev.txt virtualenv={{ virtualenv_path }} virtualenv_command=pyvenv-3.4
    become: true
    become_user: vagrant

# -------- shell ---------------------------------------------
  - name: .bashrc for vagrant user
    template: dest=~vagrant/.bashrc src=templates/etc/skel/.bashrc.j2 mode=0644 owner=vagrant group=vagrant
  - name: set unicode shell env
    copy: dest=/etc/default/locale src=files/etc/default/locale mode=0644 owner=root group=root

# -------- postgresql ----------------------------------------
  - name: check if PostgreSQL cluster is created
    command: pg_lsclusters -h
    failed_when: false
    register: pg_lsclusters

  - name: create PostgreSQL main cluster
    command: pg_createcluster 9.4 main
    when: '"9.4 main" not in pg_lsclusters.stdout'

  - name: enable postgresql
    service: name=postgresql enabled=yes

  - name: enable postgresql@9.4-main
    service: name=postgresql@9.4-main enabled=yes

  - name: start postgresql@9.4-main
    service: name=postgresql@9.4-main state=started

  - name: add postgresql user vagrant
    postgresql_user: name={{ db_user }} password={{ db_password }} role_attr_flags=SUPERUSER,LOGIN,CREATEDB
    become: yes
    become_user: postgres

  - name: create a development database
    postgresql_db: name={{ db_name }} encoding='UTF-8' owner={{ db_user }}
    become: yes
    become_user: postgres

  - name: create a test database
    postgresql_db: name="{{ db_name }}_test" encoding='UTF-8' owner={{ db_user }}
    become: yes
    become_user: postgres
